<%@ page contentType="text/html; charset=utf-8"%>
<%@ page import="java.sql.*"%>
<%!
	String url = "jdbc:oracle:thin:@localhost:XE";
	String user = "java";
	String password = "1234";%>


<%
/*클라이언트가 전송한 아이디. 비번을 디비에서 조회하여 만일 가입되어있으면 톰캣이 추후 다시 접속해도 나를 기억해준다

jsp의 내장객체 중 세션이라는 객체가 바로 세션을 구현해준다.
최초의 접속자가 들어오면 세션객체를 생성한 후 고유 아이디를 할당하고 
다시 이 아이디 응답정보에 심어놓아 (쿠키) 다음번 클라이언트 방문 시 만일 이 아이디가 존재한다면 아는체하고 없다면 새로운 세션을 만들고 아이디를 발급한다*/

String user_id = request.getParameter("user_id");
String pass = request.getParameter("pass");

Class.forName("oracle.jdbc.driver.OracleDriver");

Connection con = null;
PreparedStatement pstmt = null;
ResultSet rs = null;

con = DriverManager.getConnection(url, user, password);
String sql = "select * from member where  user_id=? and pass=?";
pstmt = con.prepareStatement(sql);
pstmt.setString(1, user_id);
pstmt.setString(2, pass);
rs = pstmt.executeQuery();

String sid = session.getId();
out.print("당신이 할당받은 세션 아이디 : " + sid + "<br>");

if (rs.next()) { // 커서를 내릴 수 있는 상태일 때 다음 레코드가 있다면.. 즉..회원이 존재한다묜
	
	// 세션 인스턴스에는 개발자가 넣고싶은 데이터를 넣을 수 있는데, map 구조로 되어있다.
	// java collection framework : 자료구조 java.util...

//	session.setAttribute("user_id", "scott");
	//session.setAttribute("pass", "1234");

	out.print("당신의 아이디를 맞춰볼게요 <br> ");
	out.print("당신 아이디 : " + session.getAttribute("user_id") + "<br>");
	out.print("당신 비밀번호 : " + session.getAttribute("pass") + "<br>");
	
	
	
} else {
	out.print("<script>");
	out.print("alert('회원정보가 올바르지 않습니다.');");
	out.print("history.back();");
	out.print("</script>");
}


%>